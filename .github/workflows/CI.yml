# This file is autogenerated by maturin v1.9.4
# To update, run
#
#       maturin generate-ci github
#
name: CI

on:
  push:
    # branches:
    #   - main
    #   - master
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  cache-decision:
    # 触发条件不变
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'  }}
    runs-on: ubuntu-latest
    outputs:
      use_sccache: ${{ steps.decision.outputs.use_sccache }}
      # 🌟 已移除：release_tag
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史以比较标签

      - name: Decide sccache usage based on Git history
        id: decision
        shell: bash
        run: |
          # 🌟 可自定义的变量：用于手动禁用 sccache 的 commit 消息关键词 (使用 | 进行分隔)
          CACHE_DISABLE_KEYWORDS='#major|#minor|#nocache'

          CURRENT_REF="${{ github.ref }}"
          CURRENT_TAG="${{ github.ref_name }}"

          echo "--- 1. 当前触发信息 ---"
          echo "Debug: CURRENT_REF=$CURRENT_REF"
          echo "Debug: CURRENT_TAG=$CURRENT_TAG"

          # --- 非 Tag 触发，强制启用缓存 ---
          if [[ ! "$CURRENT_REF" =~ ^refs/tags/ ]]; then
            echo "--- 2. 决策结果：非Tag触发，强制启用缓存 ---"
            echo "use_sccache=true" >> $GITHUB_OUTPUT
            echo "**DECISION: ENABLING sccache** (Non-tag trigger: $CURRENT_REF)"
            exit 0
          fi

          # 以下逻辑仅针对 Tag 触发

          # 获取标签并打印
          TAGS=$(git tag --list --sort=-version:refname 2>/dev/null || git tag --list --sort=-refname 2>/dev/null || echo "")
          PREV_TAG=$(echo "$TAGS" | tail -n +2 | head -n1 2>/dev/null || echo "")

          echo "--- 2. Git Tag 信息 ---"
          echo "Debug: 所有 Tag 列表 (按版本倒序):"
          echo "$TAGS"
          echo "Debug: PREV_TAG=$PREV_TAG"

          if [ -z "$PREV_TAG" ]; then
            # 首次发布，视为 patch（启用缓存）
            echo "--- 3. 决策结果：首次发布，启用缓存 ---"
            echo "use_sccache=true" >> $GITHUB_OUTPUT
            echo "**DECISION: ENABLING sccache** (Reason: No previous tag found.)"
            exit 0
          fi

          # 检查区间内 commit 消息
          LOG_RANGE="$PREV_TAG".."$CURRENT_TAG"
          COMMITS_COUNT=$( { git log --oneline "$LOG_RANGE" 2>/dev/null || true; } | wc -l )

          echo "--- 3. 提交记录检查 ($LOG_RANGE) ---"
          echo "Debug: LOG_RANGE=$LOG_RANGE"
          echo "Debug: COMMITS_COUNT=$COMMITS_COUNT"

          if [ "$COMMITS_COUNT" -eq 0 ]; then
            echo "--- 4. 决策结果：无新增提交，启用缓存 ---"
            echo "use_sccache=true" >> $GITHUB_OUTPUT
            echo "**DECISION: ENABLING sccache** (Reason: No commits between tags.)"
            exit 0
          fi

          # 打印区间内的所有 Commit 消息
          echo "Debug: 区间内所有 Commit 消息/Body:"
          git log "$LOG_RANGE" --pretty=format:'%s%n%b' 2>/dev/null || true
          echo "-------------------------------------"


          # ⭐ 更新后的逻辑：检查是否包含自定义的关键词
          MANUAL_DISABLE_CACHE=$( { git log "$LOG_RANGE" --pretty=format:%B 2>/dev/null || true; } | (grep -E "$CACHE_DISABLE_KEYWORDS" || true) | wc -l )

          echo "Debug: MANUAL_DISABLE_CACHE (匹配到禁用关键词的数量)=$MANUAL_DISABLE_CACHE"

          if [ "$MANUAL_DISABLE_CACHE" -gt 0 ]; then
            echo "--- 5. 决策结果：发现自定义禁用关键词，禁用缓存 ---"
            echo "use_sccache=false" >> $GITHUB_OUTPUT
            echo "**DECISION: DISABLING sccache** (Reason: Custom keyword ($CACHE_DISABLE_KEYWORDS) detected.)"
            exit 0
          fi

          # 原有逻辑：检查是否存在 'feat:' 或 'BREAKING CHANGE:' 提交
          NON_PATCH_COMMITS=$( { git log --oneline "$LOG_RANGE" 2>/dev/null || true; } | (grep -E 'feat:|BREAKING CHANGE:' || true) | wc -l )

          echo "Debug: NON_PATCH_COMMITS (匹配到非 Patch 提交的数量)=$NON_PATCH_COMMITS"

          if [ "$NON_PATCH_COMMITS" -eq 0 ]; then
            echo "--- 6. 决策结果：只有 Patch 提交，启用缓存 ---"
            echo "use_sccache=true" >> $GITHUB_OUTPUT
            echo "**DECISION: ENABLING sccache** (Reason: Only patch commits between $PREV_TAG and $CURRENT_TAG.)"
          else
            echo "--- 6. 决策结果：发现非 Patch 提交，禁用缓存 ---"
            echo "use_sccache=false" >> $GITHUB_OUTPUT
            echo "**DECISION: DISABLING sccache** (Reason: Non-patch commits (feat or BREAKING) detected.)"
          fi

  linux:
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'  }}
    runs-on: ${{ matrix.platform.runner }}
    needs: [cache-decision]
    env:
      # 专为 aarch64 交叉编译设置，以修复 ring 库的 ARM 汇编错误
      CFLAGS_aarch64_unknown_linux_gnu: "-D__ARM_ARCH=8"
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
          # - runner: ubuntu-22.04
          #   target: s390x
          # - runner: ubuntu-22.04
          #   target: ppc64le

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史以比较标签

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') || needs.cache-decision.outputs.use_sccache == 'true' }}
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'  }}
    runs-on: ${{ matrix.platform.runner }}
    needs: [cache-decision]
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史以比较标签

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') || needs.cache-decision.outputs.use_sccache == 'true' }}
          manylinux: musllinux_1_2
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    if: false # 👈 关键修改：添加这一行，直接跳过整个 Job
    # if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'  }}
    runs-on: ${{ matrix.platform.runner }}
    needs: [cache-decision]
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史以比较标签

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') || needs.cache-decision.outputs.use_sccache == 'true' }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'  }}
    runs-on: ${{ matrix.platform.runner }}
    needs: [cache-decision]
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史以比较标签

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') || needs.cache-decision.outputs.use_sccache == 'true' }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'  }}
    runs-on: ubuntu-latest
    needs: [cache-decision]
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    if: ${{ startsWith(github.ref, 'refs/tags/')  }}
    name: Release
    runs-on: ubuntu-latest
    needs: [linux, musllinux, macos, sdist, cache-decision] # windows
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: "wheels-*/*"
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/')  }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
        continue-on-error: true

      - name: Upload Release Assets
        if: ${{ startsWith(github.ref, 'refs/tags/')  }}
        uses: softprops/action-gh-release@v1
        with:
          files: "wheels-*/*" # 👈 使用通配符匹配所有下载的 Artifacts

