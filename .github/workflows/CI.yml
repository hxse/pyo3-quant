# This file is autogenerated by maturin v1.9.4
# To update, run
#
#    maturin generate-ci github

name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  cache-decision:
    runs-on: ubuntu-latest
    # if: startsWith(github.ref, 'refs/tags/')
    outputs:
      use_sccache: ${{ steps.decision.outputs.use_sccache }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史以比较标签
      - name: Decide sccache usage based on Git history
        id: decision
        shell: bash
        run: |
          CURRENT_TAG="${{ github.ref_name }}"

          # --- 新增逻辑：非Tag触发，强制启用缓存 ---
          if [[ ! "${{ github.ref }}" =~ ^refs/tags/ ]]; then
            echo "use_sccache=true" >> $GITHUB_OUTPUT
            echo "Non-tag trigger (Branch push or PR); enabling sccache."
            exit 0
          fi

          # 获取上一个标签
          PREV_TAG=$(git describe --tags --abbrev=0 "$(git rev-list --tags --skip=1 --max-count=1 HEAD)" 2>/dev/null || echo "")

          if [ -z "$PREV_TAG" ]; then
            # 首次发布，视为patch（启用缓存）
            echo "use_sccache=true" >> $GITHUB_OUTPUT
            echo "No previous tag; enabling sccache for initial release."
          else
            # 检查区间内commit消息
            COMMITS=$(git log --oneline "$PREV_TAG".."$CURRENT_TAG" 2>/dev/null | wc -l)

            if [ "$COMMITS" -eq 0 ]; then
              echo "use_sccache=true" >> $GITHUB_OUTPUT
              echo "No commits between tags; enabling sccache."
            else
              # 优化后的逻辑：检查是否存在 'feat:' 或 'BREAKING CHANGE:' 提交
              NON_PATCH_COMMITS=$(git log --oneline "$PREV_TAG".."$CURRENT_TAG" 2>/dev/null | grep -E 'feat:|BREAKING CHANGE:' | wc -l)

              if [ "$NON_PATCH_COMMITS" -eq 0 ]; then
                echo "use_sccache=true" >> $GITHUB_OUTPUT
                echo "Only patch commits between $PREV_TAG and $CURRENT_TAG; enabling sccache."
              else
                echo "use_sccache=false" >> $GITHUB_OUTPUT
                echo "Non-patch commits (feat or BREAKING) detected; disabling sccache."
              fi
            fi
          fi

  linux:
    runs-on: ${{ matrix.platform.runner }}
    needs: [cache-decision]
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
          # - runner: ubuntu-22.04
          #   target: s390x
          # - runner: ubuntu-22.04
          #   target: ppc64le

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史以比较标签

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') || needs.cache-decision.outputs.use_sccache == 'true' }}
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    needs: [cache-decision]
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史以比较标签

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') || needs.cache-decision.outputs.use_sccache == 'true' }}
          manylinux: musllinux_1_2
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    if: false # 👈 关键修改：添加这一行，直接跳过整个 Job
    runs-on: ${{ matrix.platform.runner }}
    needs: [cache-decision]
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史以比较标签

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') || needs.cache-decision.outputs.use_sccache == 'true' }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    needs: [cache-decision]
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史以比较标签

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') || needs.cache-decision.outputs.use_sccache == 'true' }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    needs: [cache-decision]
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, musllinux, macos, sdist, cache-decision] # windows
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: "wheels-*/*"
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
        continue-on-error: true

      # ----------------------------------------------------
      # ⭐ 关键新增步骤 2: 上传文件作为 GitHub Release 附件
      # ----------------------------------------------------
      - name: Upload Release Assets
        if: ${{ startsWith(github.ref, 'refs/tags/') }} # 仅在 Tag 触发时上传
        uses: softprops/action-gh-release@v1
        with:
          files: "wheels-*/*" # 👈 使用通配符匹配所有下载的 Artifacts
          # 注意：这个 Action 默认会查找当前 Git Tag 对应的 Release，如果不存在会创建 Draft Release。
          # 确保你在推送 Tag 后，该 Release 在 GitHub 上已存在（即使是草稿）。
          # 如果你的工作流没有创建 Release 的步骤，通常需要在前面加一个 'actions/create-release' 步骤。
